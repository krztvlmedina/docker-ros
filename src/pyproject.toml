[project]
name = "pifenet-test"
version = "0.1.0"
requires-python = "==3.8.6"
description = "PifeNet project, used for object detection using LiDAR"
readme = "README.md"
dependencies = [
    "black==22.6.0",
    "cachetools==5.2.0",
    "click==8.1.3",
    "flake8==4.0.1",
    "iniconfig==1.1.1",
    "lyft-dataset-sdk==0.0.8",
    "mccabe==0.6.1",
    "mypy-extensions==0.4.3",
    "opencv-python==4.6.0.66",
    "pathspec==0.9.0",
    "platformdirs==2.5.2",
    "plotly==5.9.0",
    "pluggy==1.0.0",
    "py==1.11.0",
    "pycodestyle==2.8.0",
    "pyflakes==2.4.0",
    "pyquaternion==0.9.9",
    "pytest==7.1.2",
    "shapely==1.8.2",
    "tenacity==8.0.1",
    "tomli==2.0.1",
	]
	
# [build-system]
# requires = ["hatchling>=1.24.2", "scikit-build-core~=0.9.3"]
# build-backend = "hatchling.build"

# [tool.setuptools.packages.find]
# where = []

# [tool.scikit-build]
# build.verbose = true
# logging.level = "INFO"

# [tool.hatch.build.targets.wheel.hooks.scikit-build]
# experimental = true

# [tool.uv.sources]
# torch = [{ index = "pytorch-cu110", marker = "sys_platform == 'linux' or sys_platform == 'win32'"  },]
# torchvision = [{ index = "pytorch-cu110", marker = "sys_platform == 'linux' or sys_platform == 'win32'"  },]
# torchaudio = [{ index = "pytorch-cu110", marker = "sys_platform == 'linux' or sys_platform == 'win32'"  },]

# [[tool.uv.index]]
# name = "pytorch-cu110"
# url = "https://download.pytorch.org/whl/cu110"
# explicit = true

