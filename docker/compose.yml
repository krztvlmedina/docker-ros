services:
  spconv:
    build:
      context: ../
      dockerfile: docker/base.pixi.Dockerfile
      target: build-spconv
    image: spconv:latest   # <--- tag it so pifenet can reference
    profiles: ["build-only"]
  pifenet:
    build:
      context: ../
      dockerfile: docker/pixi.Dockerfile
    image: pifenet
    container_name: velodyne_pifenet  
      # - ./external:/external
    # command: ["bash"]
    command: ["tail", "-f", "/dev/null"]
    stdin_open: true # docker run -i
    runtime: nvidia
    deploy:
      resources:
        reservations:
          devices:
            - capabilities:
              - gpu
    volumes:
      - ${PWD}/external/PiFeNet:/workspaces/pifenet/src:cached
    develop:
      # Create a `watch` configuration to update the app
      # https://docs.docker.com/compose/file-watch/#compose-watch-versus-bind-mounts
      watch:
        # Sync the working directory with the `/app` directory in the container
        - action: sync
          path: .
          target: /app
          # Exclude the project virtual environment â€” it could be for a
          # different platform in the container
          ignore:
            - .venv/

        # Rebuild the image if dependencies change by checking uv.lock
        - action: rebuild
          path: ./pyproject.toml
  velodyne_ros:
    build:
      context: ..
      dockerfile: docker/ros-velodyne.Dockerfile
    container_name: velodyne_ros2
    network_mode: "host"
    ipc: host
    # Needed to display graphical applications
    privileged: true
    environment:
      # Allows graphical programs in the container.
      - DISPLAY=${DISPLAY}
      - QT_X11_NO_MITSHM=1
      - NVIDIA_DRIVER_CAPABILITIES=all
    volumes:
      # Allows graphical programs in the container.
      - /tmp/.X11-unix:/tmp/.X11-unix:rw
      - ${XAUTHORITY:-$HOME/.Xauthority}:/root/.Xauthority
    tty: true