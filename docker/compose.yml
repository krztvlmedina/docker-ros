services:
  pifenet-base:
    build:
      context: ../
      dockerfile: docker/Dockerfile.base
    image: pifenet-base
    profiles: ["build-only"]

  pifenet:
    build:
      context: ../
      dockerfile: docker/Dockerfile
    image: pifenet
    depends_on:
      - pifenet-base
    volumes:
      - ../src:/home/uv-example-user/src
      - ./external:/external
    command: ["bash"]
    develop:
      # Create a `watch` configuration to update the app
      # https://docs.docker.com/compose/file-watch/#compose-watch-versus-bind-mounts
      watch:
        # Sync the working directory with the `/app` directory in the container
        - action: sync
          path: .
          target: /app
          # Exclude the project virtual environment â€” it could be for a
          # different platform in the container
          ignore:
            - .venv/

        # Rebuild the image if dependencies change by checking uv.lock
        - action: rebuild
          path: ./pyproject.toml
  velodyne_ros:
    build:
      context: ..
      dockerfile: docker/ros-velodyne.Dockerfile
    container_name: velodyne_ros
    network_mode: "host"
    tty: true
    
